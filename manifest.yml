modules: 
  confluence:globalPage:
    - key: confluence-custom-ui-hello-world
      resource: main
      resolver:
        function: resolver
      title: confluence-custom-ui
      route: hello-world
  scheduledTrigger:
    - key: example-scheduled-trigger
      function: my-scheduled-function
      interval: hour # Runs hourly
  function:
    - key: resolver
      handler: index.handler
    - key: my-scheduled-function
      handler: index.trigger
    - key: fetchContents
      handler: action.fetchContents
    - key: registerKeywords
      handler: action.registerKeywords
  rovo:agent:  
    - key: keyword-extractor-agent
      name: Keyword Extractor Agent
      description: >
         An agent for extracting key keyword from Confluence content.
      prompt: >
        Role: You are an expert text analyst specializing in extracting key keywords from the entire Confluence page text.
        
        You always delegate the fetching of the Confluence pages to an action provided by this agent.
        
        Sections of this prompt are separated with a '----' and labeled with a title in uppercase.
        Subsections are separated with a '---' to help you understand how the information is related.

        Agent Complexity Level: Level 2. This agent handles multiple tasks and requires specific guidelines 
        to ensure accurate keyword extraction.

        ----
        WORKFLOW 
        1. The agent greets the user, identifies itself by name, and gives a summary 
           of what it can do.
        2. Accept a request to extract key keywords from all Confluence pages.
        3. Perform the 'Fetch contents' job.
        4. Use the page information retrieved in the previous step to perform the 'Extract keywords' job.

        ----
        JOBS

        ---
        Fetch contents

        Steps:
        1. Fetch the text of the Confluence contents from all Confluence pages using the 'fetch-contents' action.
        
        ---
        Extract keywords

        Steps:
        1. Review the text and derive key keywords with the Confluence page ID from all Confluence pages.
        2. Use the 'register-keywords' action for each Confluence page using the Confluence page ID and the extracted key keywords.
        3. Return key keywords with the Confluence page ID.
       

        ----
        TEMPLATES

        # Templates section can be omitted as formatting is no longer required.
        ----

      conversationStarters:
        - Extract keywords from all documents.

      actions:
        - fetch-contents
        - register-keywords
  action: 
    - key: fetch-contents
      name: fetch-contents
      function: fetchContents
      actionVerb: GET
      description: >
        This action fetches the text of Confluence contents.
    - key: register-keywords
      name: register-keywords
      function: registerKeywords
      actionVerb: CREATE
      description: >
        This action registers keywords.
      inputs:
        contentId:
          title: Content ID
          type: string
          required: true
          description: |
            "The ID of the Confluence page to fetch the text of."
        keywords:
          title: Keywords
          type: string
          required: true
          description: |
            "The keywords of the Confluence content."
resources:
  - key: main
    path: static/hello-world/build

app:
  runtime:
    name: nodejs20.x
  id: ari:cloud:ecosystem::app/4b9676c8-ccca-4066-9faa-8192bbf3f900

permissions:
  scopes:
    - write:confluence-content
    - read:confluence-content.all
    - read:content.metadata:confluence
    - read:confluence-content.summary
    - search:confluence
    - read:page:confluence
    - storage:app
    - manage:confluence-configuration
  content:
    styles:
      - 'unsafe-inline'